/** 
 * File:	reipl_bootloader_finish.ycp
 * 
 * Module:	reIPL
 * 
 * Authors:	Ulrich Hecht <uli@suse.de>
 *		Lukas Ocilka <locilka@suse.cz>
 * 
 * $Id$
 * 
 */
{
    // YaST finish client returns (map) $[
    //     "different" : (boolean) whether changed,
    //     "ipl_msg"   : (string) localized message,
    // ]

    import "Arch";
    import "Reipl";

    textdomain "reipl";

    boolean different = true;
    string ipl_msg = "";

    // Other architectures do not support it
    if (Arch::s390 ()) {
	map <string, any> oldConfiguration = Reipl::ReadState ();
	map <string, any> newConfiguration = Reipl::ReadState ();

	if (oldConfiguration != nil) {
	    newConfiguration = Reipl::ModifyReiplWithBootPartition (newConfiguration);

	    map oldCcwMap = (map)oldConfiguration["ccw"]:nil;
	    map newCcwMap = (map)newConfiguration["ccw"]:nil;
	    map oldFcpMap = (map)oldConfiguration["fcp"]:nil;
	    map newFcpMap = (map)newConfiguration["fcp"]:nil;

            different =    (oldConfiguration["method"]:"a" != newConfiguration["method"]:"b")
                        || (oldCcwMap["device"]:"a" != newCcwMap["device"]:"b")
                        || (oldCcwMap["loadparm"]:"a" != newCcwMap["loadparm"]:"b")
                        || (oldCcwMap["parm"]:"a" != newCcwMap["parm"]:"b")
                        || (oldFcpMap["device"]:"a" != newFcpMap["device"]:"b")
                        || (oldFcpMap["wwpn"]:"a" != newFcpMap["wwpn"]:"b")
                        || (oldFcpMap["lun"]:"a" != newFcpMap["lun"]:"b")
                        || (oldFcpMap["bootprog"]:"a" != newFcpMap["bootprog"]:"b")
                        || (oldFcpMap["br_lba"]:"a" != newFcpMap["br_lba"]:"b");

            y2milestone("(oldConfiguration['method']:'a' != newConfiguration['method']:'b') = %1", (oldConfiguration["method"]:"a" != newConfiguration["method"]:"b"));
            y2milestone("(oldCcwMap['device']:'a' != newCcwMap['device']:'b')               = %1", (oldCcwMap["device"]:"a" != newCcwMap["device"]:"b"));
            y2milestone("(oldCcwMap['loadparm']:'a' != newCcwMap['loadparm']:'b')           = %1", (oldCcwMap["loadparm"]:"a" != newCcwMap["loadparm"]:"b"));
            y2milestone("(oldCcwMap['parm']:'a' != newCcwMap['parm']:'b')                   = %1", (oldCcwMap["parm"]:"a" != newCcwMap["parm"]:"b"));
            y2milestone("(oldFcpMap['device']:'a' != newFcpMap['device']:'b')               = %1", (oldFcpMap["device"]:"a" != newFcpMap["device"]:"b"));
            y2milestone("(oldFcpMap['wwpn']:'a' != newFcpMap['wwpn']:'b')                   = %1", (oldFcpMap["wwpn"]:"a" != newFcpMap["wwpn"]:"b"));
            y2milestone("(oldFcpMap['lun']:'a' != newFcpMap['lun']:'b')                     = %1", (oldFcpMap["lun"]:"a" != newFcpMap["lun"]:"b"));
            y2milestone("(oldFcpMap['bootprog']:'a' != newFcpMap['bootprog']:'b')           = %1", (oldFcpMap["bootprog"]:"a" != newFcpMap["bootprog"]:"b"));
            y2milestone("(oldFcpMap['br_lba']:'a' != newFcpMap['br_lba']:'b')               = %1", (oldFcpMap["br_lba"]:"a" != newFcpMap["br_lba"]:"b"));
            y2milestone("different = %1", different);

	    y2milestone("newConfiguration['method'] :  %1", newConfiguration["method"]:"ERROR");
	    if (newConfiguration["method"]:"ERROR" == "ccw") {
	        y2milestone("making ccw ipl text");
		string dev = substring (newCcwMap["device"]:"", 4, 4);

		// TRANSLATORS: part of a shutdown message
		// %1 is replaced with a device name
		// Newline at the end is required
		ipl_msg = sformat (_("
After shutdown, reload the system
with an IPL from DASD '%1'.
"), dev);

	    } else if (newConfiguration["method"]:"ERROR" == "fcp") {
  	        y2milestone("making fcp ipl text");
		string dev  = substring (newFcpMap["device"]:"",  4, 4);
		string wwpn = newFcpMap["wwpn"]:"";
		string lun  = newFcpMap["lun"]:"";

		// TRANSLATORS: part of a shutdown message
		// %1 is replaced with a FCP name
		// %2 is replaced with a WWPN name
		// %3 is replaced with a LUN name
		// Newline at the end is required
		ipl_msg = sformat (_("
After shutdown, reload the system
with an IPL from FCP '%1'
with WWPN '%2'
and LUN '%3'.
"), dev, wwpn, lun);
	    } else {
	      y2warning("cannot make ipl text for unknown method");
	    }
	}
    }

    y2milestone ("Configuration (reIPL) has been changed: %1", different);
    y2milestone ("Configuration (reIPL) generated shutdown dialog box message: %1", ipl_msg);

    map <string, any> ret = $["different":different, "ipl_msg":ipl_msg];

    y2milestone("ret = %1", ret);

    return ret;
}
